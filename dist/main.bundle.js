(()=>{"use strict";var n={208:(n,e,t)=>{t.d(e,{A:()=>A});var r=t(354),o=t.n(r),a=t(314),i=t.n(a)()(o());i.push([n.id,"body {\n    display: grid;\n    grid-template-columns: 1.5fr 8fr;\n    grid-template-rows: 1fr 8fr;\n    padding: 0;\n    margin: 0;\n    height: 100vh;\n    width: 100wh;\n    font-family: 'Courier New', Courier, monospace;\n}\n#content {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: #c0b0a0;\n}\n#big-card {\n    margin: 20px;\n    border-radius: 5px;\n    background-color: white;\n    width: 80%;\n    height: 80%;\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px, rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px, rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;\n}\n\n#header {\n    grid-column: 2;\n    grid-row: 1;\n    background-color: #e83c38;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n#side-bar {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    grid-row: 1/3;\n    grid-column: 1;\n    background-color: #322c38;\n    padding-top: 60px;\n    gap: 100px;\n}\n\n#logo {\n    width: 7em;\n    height: auto;\n}\n\n#nav button {\n    border-radius: 30px;\n    padding: 20px;\n    border: 0;\n    font-family: inherit;\n    font-size: inherit;\n    background-color: #e83c38;\n\n}\n#nav {\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n    gap: 30px;\n}\n\n#content{\n    display: flex;\n    flex-direction: column;\n}\n\n.dialog-list {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.dialog {\n    border-radius: 20px;\n    border: 0px;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n    align-self: center;\n    justify-content: center;\n    background-color: #322c38;\n    color: white;\n\n}\n\n#big-card {\n    padding: 20px;\n    overflow-y: auto;\n    height: 700px;\n}\n\n.add {\n    width: 150px;\n    font-family: inherit;\n    font-size: 2em;\n    margin: 10px;\n    padding: 10px;\n    border-radius: 20px;\n    border: 0;\n    background-color: #e83c38;\n}\n\n.add:hover {\n    opacity: 50%;\n    color: white;\n}\n.text-field {\n    display: flex;\n    align-items: center;\n    gap: 20px;\n\n}\n#task, #description {\n    width: 100%;\n    height: 1.3em;\n    border-radius: 10px;\n    font-size: inherit;\n    font-family: inherit;\n}\n\n#confirm {\n    font-family: inherit;\n    font-size: inherit;\n    background-color:#e83c38;\n    border: 0;\n    border-radius: 30px;\n    padding: 10px;\n}\n\n#cancel {\n    font-size: inherit;\n    font-family: inherit;\n    background-color: #e83c38;\n    border: 0;\n    border-radius: 30px;\n    padding: 10px;\n}\n\n#big-card::-webkit-scrollbar {\n    width: 12px;\n}\n\n#big-card::-webkit-scrollbar-track {\n    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3); \n    border-radius: 10px;\n}\n\n#big-card::-webkit-scrollbar-thumb {\n    border-radius: 10px;\n    -webkit-box-shadow: inset 12px 0 6px grey; \n}\n\n.area {\n    list-style: none;\n    display: flex;\n    align-items: flex-start;\n    gap: 30px;\n    height: 100px;\n}\n\n.area textarea {\n    width: 50px;\n    height: 300px;\n}\n.radio {\n    list-style: none;\n}\n\n.buttons {\n    display: flex;\n    gap: 20px;\n}\n\n.buttons button {\n    padding: 10px;\n    border: 0;\n    border-radius: 15px;\n    background-color: #e83c38;\n}\n\nbutton.task-done {\n    background-color: green;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,gCAAgC;IAChC,2BAA2B;IAC3B,UAAU;IACV,SAAS;IACT,aAAa;IACb,YAAY;IACZ,8CAA8C;AAClD;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,yBAAyB;AAC7B;AACA;IACI,YAAY;IACZ,kBAAkB;IAClB,uBAAuB;IACvB,UAAU;IACV,WAAW;IACX,uLAAuL;AAC3L;;AAEA;IACI,cAAc;IACd,WAAW;IACX,yBAAyB;IACzB,aAAa;IACb,mBAAmB;IACnB,uBAAuB;AAC3B;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,aAAa;IACb,cAAc;IACd,yBAAyB;IACzB,iBAAiB;IACjB,UAAU;AACd;;AAEA;IACI,UAAU;IACV,YAAY;AAChB;;AAEA;IACI,mBAAmB;IACnB,aAAa;IACb,SAAS;IACT,oBAAoB;IACpB,kBAAkB;IAClB,yBAAyB;;AAE7B;AACA;IACI,gBAAgB;IAChB,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,mBAAmB;IACnB,WAAW;IACX,4CAA4C;IAC5C,kBAAkB;IAClB,uBAAuB;IACvB,yBAAyB;IACzB,YAAY;;AAEhB;;AAEA;IACI,aAAa;IACb,gBAAgB;IAChB,aAAa;AACjB;;AAEA;IACI,YAAY;IACZ,oBAAoB;IACpB,cAAc;IACd,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,SAAS;IACT,yBAAyB;AAC7B;;AAEA;IACI,YAAY;IACZ,YAAY;AAChB;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;;AAEb;AACA;IACI,WAAW;IACX,aAAa;IACb,mBAAmB;IACnB,kBAAkB;IAClB,oBAAoB;AACxB;;AAEA;IACI,oBAAoB;IACpB,kBAAkB;IAClB,wBAAwB;IACxB,SAAS;IACT,mBAAmB;IACnB,aAAa;AACjB;;AAEA;IACI,kBAAkB;IAClB,oBAAoB;IACpB,yBAAyB;IACzB,SAAS;IACT,mBAAmB;IACnB,aAAa;AACjB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,iDAAiD;IACjD,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;IACnB,yCAAyC;AAC7C;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,uBAAuB;IACvB,SAAS;IACT,aAAa;AACjB;;AAEA;IACI,WAAW;IACX,aAAa;AACjB;AACA;IACI,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;IACI,aAAa;IACb,SAAS;IACT,mBAAmB;IACnB,yBAAyB;AAC7B;;AAEA;IACI,uBAAuB;AAC3B",sourcesContent:["body {\n    display: grid;\n    grid-template-columns: 1.5fr 8fr;\n    grid-template-rows: 1fr 8fr;\n    padding: 0;\n    margin: 0;\n    height: 100vh;\n    width: 100wh;\n    font-family: 'Courier New', Courier, monospace;\n}\n#content {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: #c0b0a0;\n}\n#big-card {\n    margin: 20px;\n    border-radius: 5px;\n    background-color: white;\n    width: 80%;\n    height: 80%;\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px, rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px, rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;\n}\n\n#header {\n    grid-column: 2;\n    grid-row: 1;\n    background-color: #e83c38;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n#side-bar {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    grid-row: 1/3;\n    grid-column: 1;\n    background-color: #322c38;\n    padding-top: 60px;\n    gap: 100px;\n}\n\n#logo {\n    width: 7em;\n    height: auto;\n}\n\n#nav button {\n    border-radius: 30px;\n    padding: 20px;\n    border: 0;\n    font-family: inherit;\n    font-size: inherit;\n    background-color: #e83c38;\n\n}\n#nav {\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n    gap: 30px;\n}\n\n#content{\n    display: flex;\n    flex-direction: column;\n}\n\n.dialog-list {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.dialog {\n    border-radius: 20px;\n    border: 0px;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n    align-self: center;\n    justify-content: center;\n    background-color: #322c38;\n    color: white;\n\n}\n\n#big-card {\n    padding: 20px;\n    overflow-y: auto;\n    height: 700px;\n}\n\n.add {\n    width: 150px;\n    font-family: inherit;\n    font-size: 2em;\n    margin: 10px;\n    padding: 10px;\n    border-radius: 20px;\n    border: 0;\n    background-color: #e83c38;\n}\n\n.add:hover {\n    opacity: 50%;\n    color: white;\n}\n.text-field {\n    display: flex;\n    align-items: center;\n    gap: 20px;\n\n}\n#task, #description {\n    width: 100%;\n    height: 1.3em;\n    border-radius: 10px;\n    font-size: inherit;\n    font-family: inherit;\n}\n\n#confirm {\n    font-family: inherit;\n    font-size: inherit;\n    background-color:#e83c38;\n    border: 0;\n    border-radius: 30px;\n    padding: 10px;\n}\n\n#cancel {\n    font-size: inherit;\n    font-family: inherit;\n    background-color: #e83c38;\n    border: 0;\n    border-radius: 30px;\n    padding: 10px;\n}\n\n#big-card::-webkit-scrollbar {\n    width: 12px;\n}\n\n#big-card::-webkit-scrollbar-track {\n    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3); \n    border-radius: 10px;\n}\n\n#big-card::-webkit-scrollbar-thumb {\n    border-radius: 10px;\n    -webkit-box-shadow: inset 12px 0 6px grey; \n}\n\n.area {\n    list-style: none;\n    display: flex;\n    align-items: flex-start;\n    gap: 30px;\n    height: 100px;\n}\n\n.area textarea {\n    width: 50px;\n    height: 300px;\n}\n.radio {\n    list-style: none;\n}\n\n.buttons {\n    display: flex;\n    gap: 20px;\n}\n\n.buttons button {\n    padding: 10px;\n    border: 0;\n    border-radius: 15px;\n    background-color: #e83c38;\n}\n\nbutton.task-done {\n    background-color: green;\n}"],sourceRoot:""}]);const A=i},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(i[c]=!0)}for(var d=0;d<n.length;d++){var l=[].concat(n[d]);r&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],A=0;A<n.length;A++){var c=n[A],d=r.base?c[0]+r.base:c[0],l=a[d]||0,s="".concat(d," ").concat(l);a[d]=l+1;var p=t(s),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var g=o(u,r);r.byIndex=A,e.splice(A,0,{identifier:s,updater:g,references:1})}i.push(s)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=t(a[i]);e[A].references--}for(var c=r(n,o),d=0;d<a.length;d++){var l=t(a[d]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=c}}},659:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");if(r.length)for(var o=r.length-1;o>-1&&(!n||!/^http(s?):/.test(n));)n=r[o--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(72),e=t.n(n),r=t(825),o=t.n(r),a=t(659),i=t.n(a),A=t(56),c=t.n(A),d=t(540),l=t.n(d),s=t(113),p=t.n(s),u=t(208),g={};g.styleTagTransform=p(),g.setAttributes=c(),g.insert=i().bind(null,"head"),g.domAPI=o(),g.insertStyleElement=l(),e()(u.A,g),u.A&&u.A.locals&&u.A.locals;const m=t.p+"ea6c16cb278b2fd84172.png";let f=[],b=[],x=[];const y=n=>{const e=document.createElement("div");e.classList.add("item"),e.setAttribute("id",`${n.id}`),e.classList.add(`${n.type}`);const t=document.createElement("h2");t.innerText=n.task;const r=document.createElement("p");r.innerText=n.description;const o=document.createElement("div");o.classList.add("buttons");const a=document.createElement("button"),i=document.createElement("button");return n.done?(i.innerText="Done",i.classList.add("task-done")):i.innerText="Not Done",a.innerText="delete",i.addEventListener("click",(n=>{n.target.classList.toggle("task-done"),"Done"==n.target.innerText?n.target.innerText="Not Done":n.target.innerText="Done";const e=n.target.parentElement.parentElement.classList[1],t=n.target.parentElement.parentElement.id;"monthly"==e?(n=>{b=b.map((e=>(n==e.id&&(e.done=!e.done),e)))})(t):"weekly"==e?(n=>{x=x.map((e=>(n==e.id&&(e.done=!e.done),e)))})(t):(n=>{f=f.map((e=>(n==e.id&&(e.done=!e.done),e))),console.log(f)})(t),localStorage.setItem("monthlyList",JSON.stringify(b)),localStorage.setItem("weeklyList",JSON.stringify(x)),localStorage.setItem("dailyList",JSON.stringify(f))})),a.addEventListener("click",(n=>{const e=n.target.parentElement.parentElement.classList[1],t=n.target.parentElement.parentElement.id;"monthly"==e?(n=>{b=b.filter((e=>n!=e.id))})(t):"weekly"==e?(n=>{x=x.filter((e=>n!=e.id))})(t):(n=>{f=f.filter((e=>n!=e.id)),console.log(f)})(t),n.target.parentElement.parentElement.remove(),localStorage.setItem("monthlyList",JSON.stringify(b)),localStorage.setItem("weeklyList",JSON.stringify(x)),localStorage.setItem("dailyList",JSON.stringify(f))})),o.append(i),o.append(a),e.append(t),e.append(r),e.append(o),e.append(document.createElement("hr")),e},h=n=>{const e=document.createElement("div");return e.setAttribute("id","big-card"),n.map((n=>y(n))).forEach((n=>{e.append(n)})),e},C=()=>{document.querySelector("#content").replaceChildren();const n=document.querySelector("#content"),e=h(f);n.append(e)},B=()=>{document.querySelector("#content").replaceChildren();const n=document.querySelector("#content"),e=h(b);n.append(e)},I=()=>{document.querySelector("#content").replaceChildren();const n=document.querySelector("#content"),e=h(x);n.append(e)},v=()=>{document.querySelector("#content").replaceChildren();const n=document.querySelector("#content"),e=h([]),t=(()=>{const n=document.createElement("button");return n.innerText="+",n.classList.add("add"),n.addEventListener("click",(()=>{document.querySelector("dialog").show()})),n})();e.innerHTML="<p>Our approach is separating goals to monthly, weekly and daily.<br>This provides flexibility in planning.</p>",n.append(t),n.append(e)};(()=>{try{f=JSON.parse(localStorage.getItem("dailyList")),x=JSON.parse(localStorage.getItem("weeklyList")),b=JSON.parse(localStorage.getItem("monthlyList"))}catch(n){console.log(n)}})(),document.getElementById("confirm").addEventListener("click",(n=>{n.preventDefault(),(()=>{const n={},e=document.getElementById("task"),t=document.getElementById("description"),r=document.getElementsByName("type");n.task=e.value,n.description=t.value,n.done=!1,n.id=Date.now(),r[0].checked?(n.type="monthly",(n=>{b.push(n)})(n)):r[1].checked?(n.type="weekly",(n=>{x.push(n)})(n)):(n.type="daily",(n=>{f.push(n)})(n))})(),w.close()}));const w=document.querySelector(".dialog");document.getElementById("cancel").addEventListener("click",(n=>{n.preventDefault(),w.close()})),v([]),document.getElementById("monthly").addEventListener("click",(n=>{B(b),document.querySelector("header h1").innerText="Monthly",localStorage.setItem("monthlyList",JSON.stringify(b))})),document.getElementById("weekly").addEventListener("click",(n=>{I(x),document.querySelector("header h1").innerText="Weekly",localStorage.setItem("weeklyList",JSON.stringify(x))})),document.getElementById("daily").addEventListener("click",(n=>{C(f),document.querySelector("header h1").innerText="Daily",localStorage.setItem("dailyList",JSON.stringify(f)),console.log(localStorage.getItem("dailyList"))})),document.getElementById("add").addEventListener("click",(n=>{v([]),document.querySelector("header h1").innerText="perfectodo, perfect To-Do listing!"})),document.getElementById("logo").src=m})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,